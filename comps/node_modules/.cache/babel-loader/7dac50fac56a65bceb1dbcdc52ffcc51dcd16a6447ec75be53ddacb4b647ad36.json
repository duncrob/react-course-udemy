{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\duncr\\\\Documents\\\\React Course\\\\comps\\\\src\\\\Button.js\";\nimport PropTypes from 'prop-types';\nimport { twMerge } from 'tailwind-merge';\nimport className from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Button(_ref) {\n  let {\n    children,\n    primary,\n    secondary,\n    success,\n    warning,\n    danger,\n    outline,\n    rounded\n  } = _ref;\n  const classes = twMerge(className('flex items-center px-3 py-1.5 border', {\n    'border-blue-500 bg-blue-500 text-white': primary,\n    'border-gray-900 bg-gray-900 text-white': secondary,\n    'border-green-500 bg-green-500 text-white': success,\n    'border-yellow-400 bg-yellow-400 text-white': warning,\n    'border-red-500 bg-red-500 text-white': danger,\n    'rounded-full': rounded,\n    'bg-white': outline,\n    'text-blue-500': outline && primary,\n    'text-gray-900': outline && secondary,\n    'text-green-500': outline && success,\n    'text-yellow-400': outline && warning,\n    'text-red-500': outline && danger\n  }));\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n_c = Button;\nButton.propTypes = {\n  checkVariationValue: _ref2 => {\n    let {\n      primary,\n      secondary,\n      success,\n      warning,\n      danger\n    } = _ref2;\n    const count = Number(!!primary) + Number(!!secondary) + Number(!!success) + Number(!!warning) + Number(!!danger);\n    if (count > 1) {\n      return new Error('Only one of primary, secondary, success, warning, danger can be true');\n    }\n  }\n};\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["PropTypes","twMerge","className","jsxDEV","_jsxDEV","Button","_ref","children","primary","secondary","success","warning","danger","outline","rounded","classes","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","checkVariationValue","_ref2","count","Number","Error","$RefreshReg$"],"sources":["C:/Users/duncr/Documents/React Course/comps/src/Button.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { twMerge } from 'tailwind-merge';\r\nimport className from 'classnames';\r\n\r\nfunction Button({ children,\r\n  primary,\r\n  secondary,\r\n  success,\r\n  warning,\r\n  danger,\r\n  outline,\r\n  rounded\r\n}) {\r\n  const classes = twMerge(\r\n    className('flex items-center px-3 py-1.5 border', {\r\n      'border-blue-500 bg-blue-500 text-white': primary,\r\n      'border-gray-900 bg-gray-900 text-white': secondary,\r\n      'border-green-500 bg-green-500 text-white': success,\r\n      'border-yellow-400 bg-yellow-400 text-white': warning,\r\n      'border-red-500 bg-red-500 text-white': danger,\r\n      'rounded-full': rounded,\r\n      'bg-white': outline,\r\n      'text-blue-500': outline && primary,\r\n      'text-gray-900': outline && secondary,\r\n      'text-green-500': outline && success,\r\n      'text-yellow-400': outline && warning,\r\n      'text-red-500': outline && danger\r\n    })\r\n  );\r\n\r\n  return (\r\n  <button className={classes}>\r\n    {children}\r\n  </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  checkVariationValue: ({ primary, secondary, success, warning, danger }) => {\r\n    const count =\r\n      Number(!!primary)\r\n      + Number(!!secondary)\r\n      + Number(!!success)\r\n      + Number(!!warning)\r\n      + Number(!!danger)\r\n\r\n    if (count > 1) {\r\n      return new Error('Only one of primary, secondary, success, warning, danger can be true')\r\n    }\r\n  },\r\n};\r\n\r\nexport default Button;"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,MAAMA,CAAAC,IAAA,EAQZ;EAAA,IARa;IAAEC,QAAQ;IACxBC,OAAO;IACPC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,MAAM;IACNC,OAAO;IACPC;EACF,CAAC,GAAAR,IAAA;EACC,MAAMS,OAAO,GAAGd,OAAO,CACrBC,SAAS,CAAC,sCAAsC,EAAE;IAChD,wCAAwC,EAAEM,OAAO;IACjD,wCAAwC,EAAEC,SAAS;IACnD,0CAA0C,EAAEC,OAAO;IACnD,4CAA4C,EAAEC,OAAO;IACrD,sCAAsC,EAAEC,MAAM;IAC9C,cAAc,EAAEE,OAAO;IACvB,UAAU,EAAED,OAAO;IACnB,eAAe,EAAEA,OAAO,IAAIL,OAAO;IACnC,eAAe,EAAEK,OAAO,IAAIJ,SAAS;IACrC,gBAAgB,EAAEI,OAAO,IAAIH,OAAO;IACpC,iBAAiB,EAAEG,OAAO,IAAIF,OAAO;IACrC,cAAc,EAAEE,OAAO,IAAID;EAC7B,CAAC,CACH,CAAC;EAED,oBACAR,OAAA;IAAQF,SAAS,EAAEa,OAAQ;IAAAR,QAAA,EACxBA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX;AAACC,EAAA,GA/BQf,MAAM;AAiCfA,MAAM,CAACgB,SAAS,GAAG;EACjBC,mBAAmB,EAAEC,KAAA,IAAsD;IAAA,IAArD;MAAEf,OAAO;MAAEC,SAAS;MAAEC,OAAO;MAAEC,OAAO;MAAEC;IAAO,CAAC,GAAAW,KAAA;IACpE,MAAMC,KAAK,GACTC,MAAM,CAAC,CAAC,CAACjB,OAAO,CAAC,GACfiB,MAAM,CAAC,CAAC,CAAChB,SAAS,CAAC,GACnBgB,MAAM,CAAC,CAAC,CAACf,OAAO,CAAC,GACjBe,MAAM,CAAC,CAAC,CAACd,OAAO,CAAC,GACjBc,MAAM,CAAC,CAAC,CAACb,MAAM,CAAC;IAEpB,IAAIY,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,IAAIE,KAAK,CAAC,sEAAsE,CAAC;IAC1F;EACF;AACF,CAAC;AAED,eAAerB,MAAM;AAAC,IAAAe,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}