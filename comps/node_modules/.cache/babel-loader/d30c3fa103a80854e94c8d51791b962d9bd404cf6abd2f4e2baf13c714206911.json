{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\duncr\\\\Documents\\\\React Course\\\\comps\\\\src\\\\components\\\\Link.js\",\n  _s = $RefreshSig$();\nimport classNames from \"classnames\";\nimport useNavigation from \"../hooks/use-navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Link(_ref) {\n  _s();\n  let {\n    to,\n    children,\n    className,\n    activeClassName\n  } = _ref;\n  const {\n    navigate,\n    currentPath\n  } = useNavigation();\n  const classes = classNames('text-blue-500', className, currentPath === to && activeClassName);\n\n  // Checks to see if control or command key is held down, if so allows for standard browser function\n  const handleClick = event => {\n    if (event.metaKey || event.ctrlKey) {\n      return;\n    }\n    event.preventDefault();\n    navigate(to);\n  };\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    className: classes,\n    href: to,\n    onClick: handleClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_s(Link, \"T0S/TlHnG3Al9Pp98NhcKTZVD+Q=\", false, function () {\n  return [useNavigation];\n});\n_c = Link;\nexport default Link;\nvar _c;\n$RefreshReg$(_c, \"Link\");","map":{"version":3,"names":["classNames","useNavigation","jsxDEV","_jsxDEV","Link","_ref","_s","to","children","className","activeClassName","navigate","currentPath","classes","handleClick","event","metaKey","ctrlKey","preventDefault","href","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/duncr/Documents/React Course/comps/src/components/Link.js"],"sourcesContent":["import classNames from \"classnames\";\r\nimport useNavigation from \"../hooks/use-navigation\";\r\n\r\nfunction Link({ to, children, className, activeClassName }) {\r\n  const { navigate, currentPath } = useNavigation();\r\n\r\n  const classes = classNames(\r\n    'text-blue-500',\r\n    className,\r\n    currentPath === to && activeClassName\r\n  );\r\n\r\n  // Checks to see if control or command key is held down, if so allows for standard browser function\r\n  const handleClick = (event) => {\r\n    if (event.metaKey || event.ctrlKey) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n\r\n    navigate(to);\r\n  }\r\n\r\n  return <a className={classes} href={to} onClick={handleClick}>{children}</a>\r\n}\r\n\r\nexport default Link;"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,aAAa,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,IAAIA,CAAAC,IAAA,EAA+C;EAAAC,EAAA;EAAA,IAA9C;IAAEC,EAAE;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAgB,CAAC,GAAAL,IAAA;EACxD,MAAM;IAAEM,QAAQ;IAAEC;EAAY,CAAC,GAAGX,aAAa,CAAC,CAAC;EAEjD,MAAMY,OAAO,GAAGb,UAAU,CACxB,eAAe,EACfS,SAAS,EACTG,WAAW,KAAKL,EAAE,IAAIG,eACxB,CAAC;;EAED;EACA,MAAMI,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,OAAO,EAAE;MAClC;IACF;IACAF,KAAK,CAACG,cAAc,CAAC,CAAC;IAEtBP,QAAQ,CAACJ,EAAE,CAAC;EACd,CAAC;EAED,oBAAOJ,OAAA;IAAGM,SAAS,EAAEI,OAAQ;IAACM,IAAI,EAAEZ,EAAG;IAACa,OAAO,EAAEN,WAAY;IAAAN,QAAA,EAAEA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC9E;AAAClB,EAAA,CApBQF,IAAI;EAAA,QACuBH,aAAa;AAAA;AAAAwB,EAAA,GADxCrB,IAAI;AAsBb,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}